-- MySQL Script generated by MySQL Workbench
-- Wed Apr 13 17:35:40 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema popcorndb
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `popcorndb` ;

-- -----------------------------------------------------
-- Schema popcorndb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `popcorndb` DEFAULT CHARACTER SET utf8 ;
USE `popcorndb` ;

-- -----------------------------------------------------
-- Table `popcorndb`.`Movies`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `popcorndb`.`Movies` ;

CREATE TABLE IF NOT EXISTS `popcorndb`.`Movies` (
  `MovieID` INT NOT NULL,
  `Name` VARCHAR(64) NOT NULL,
  `Rating` DECIMAL(2,1) NULL,
  PRIMARY KEY (`MovieID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `popcorndb`.`Locations`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `popcorndb`.`Locations` ;

CREATE TABLE IF NOT EXISTS `popcorndb`.`Locations` (
  `LocationID` INT NOT NULL,
  `Name` VARCHAR(64) NOT NULL,
  PRIMARY KEY (`LocationID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `popcorndb`.`Theater`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `popcorndb`.`Theater` ;

CREATE TABLE IF NOT EXISTS `popcorndb`.`Theater` (
  `TheaterID` INT NOT NULL,
  `Name` VARCHAR(64) NOT NULL,
  `LocationID` INT NOT NULL,
  PRIMARY KEY (`TheaterID`),
  INDEX `LocationID_idx` (`LocationID` ASC) VISIBLE,
  CONSTRAINT `Theater-LocationID`
    FOREIGN KEY (`LocationID`)
    REFERENCES `popcorndb`.`Locations` (`LocationID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `popcorndb`.`Halls`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `popcorndb`.`Halls` ;

CREATE TABLE IF NOT EXISTS `popcorndb`.`Halls` (
  `HallID` INT NOT NULL,
  `TheaterID` INT NOT NULL,
  `HallName` VARCHAR(64) NOT NULL,
  PRIMARY KEY (`HallID`),
  INDEX `Hall-TheaterID_idx` (`TheaterID` ASC) VISIBLE,
  CONSTRAINT `Hall-TheaterID`
    FOREIGN KEY (`TheaterID`)
    REFERENCES `popcorndb`.`Theater` (`TheaterID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `popcorndb`.`HallClass`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `popcorndb`.`HallClass` ;

CREATE TABLE IF NOT EXISTS `popcorndb`.`HallClass` (
  `HallClassID` INT NOT NULL,
  `HallID` INT NOT NULL,
  `ClassName` VARCHAR(64) NOT NULL,
  `TicketPrice` INT NOT NULL,
  PRIMARY KEY (`HallClassID`),
  INDEX `HallID_idx` (`HallID` ASC) VISIBLE,
  CONSTRAINT `HallID-HallClass`
    FOREIGN KEY (`HallID`)
    REFERENCES `popcorndb`.`Halls` (`HallID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `popcorndb`.`HallTime`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `popcorndb`.`HallTime` ;

CREATE TABLE IF NOT EXISTS `popcorndb`.`HallTime` (
  `HallTimeID` INT NOT NULL,
  `HallID` INT NOT NULL,
  `Timing` TIME NOT NULL,
  PRIMARY KEY (`HallTimeID`),
  INDEX `HallID_idx` (`HallID` ASC) VISIBLE,
  CONSTRAINT `HallID-HallTimeID`
    FOREIGN KEY (`HallID`)
    REFERENCES `popcorndb`.`Halls` (`HallID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `popcorndb`.`Schedule`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `popcorndb`.`Schedule` ;

CREATE TABLE IF NOT EXISTS `popcorndb`.`Schedule` (
  `ScheduleID` INT NOT NULL,
  `Date` DATE NOT NULL,
  `HallTimeID` INT NOT NULL,
  `MovieID` INT NOT NULL,
  PRIMARY KEY (`ScheduleID`),
  INDEX `HalltimeID_idx` (`HallTimeID` ASC) VISIBLE,
  INDEX `MovieID_idx` (`MovieID` ASC) VISIBLE,
  CONSTRAINT `Schedule-HalltimeID`
    FOREIGN KEY (`HallTimeID`)
    REFERENCES `popcorndb`.`HallTime` (`HallTimeID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Schedule-MovieID`
    FOREIGN KEY (`MovieID`)
    REFERENCES `popcorndb`.`Movies` (`MovieID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `popcorndb`.`Tickets`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `popcorndb`.`Tickets` ;

CREATE TABLE IF NOT EXISTS `popcorndb`.`Tickets` (
  `TicketID` VARCHAR(36) NOT NULL,
  `HallClassId` INT NOT NULL,
  `ScheduleID` INT NULL,
  PRIMARY KEY (`TicketID`),
  INDEX `HallClassID_idx` (`HallClassId` ASC) VISIBLE,
  INDEX `ScheduleID_idx` (`ScheduleID` ASC) VISIBLE,
  CONSTRAINT `Tickets-HallClassID`
    FOREIGN KEY (`HallClassId`)
    REFERENCES `popcorndb`.`HallClass` (`HallClassID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Tickets-ScheduleID`
    FOREIGN KEY (`ScheduleID`)
    REFERENCES `popcorndb`.`Schedule` (`ScheduleID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `popcorndb`.`ClassSeats`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `popcorndb`.`ClassSeats` ;

CREATE TABLE IF NOT EXISTS `popcorndb`.`ClassSeats` (
  `SeatID` INT NOT NULL,
  `HallClassID` INT NOT NULL,
  `SeatLabel` CHAR(5) NOT NULL,
  PRIMARY KEY (`SeatID`),
  INDEX `HallClassID_idx` (`HallClassID` ASC) VISIBLE,
  CONSTRAINT `HallClassID-Seats`
    FOREIGN KEY (`HallClassID`)
    REFERENCES `popcorndb`.`HallClass` (`HallClassID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `popcorndb`.`TicketRows`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `popcorndb`.`TicketRows` ;

CREATE TABLE IF NOT EXISTS `popcorndb`.`TicketRows` (
  `RowID` INT NOT NULL AUTO_INCREMENT,
  `TicketID` VARCHAR(36) NOT NULL,
  `SeatID` INT NOT NULL,
  PRIMARY KEY (`RowID`),
  INDEX `SeatID_idx` (`SeatID` ASC) VISIBLE,
  INDEX `TicketID_idx` (`TicketID` ASC) VISIBLE,
  CONSTRAINT `Row-SeatID`
    FOREIGN KEY (`SeatID`)
    REFERENCES `popcorndb`.`ClassSeats` (`SeatID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Row-TicketID`
    FOREIGN KEY (`TicketID`)
    REFERENCES `popcorndb`.`Tickets` (`TicketID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `popcorndb` ;

-- -----------------------------------------------------
-- Placeholder table for view `popcorndb`.`movieList`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `popcorndb`.`movieList` (`id` INT);

-- -----------------------------------------------------
-- Placeholder table for view `popcorndb`.`hallMovieList`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `popcorndb`.`hallMovieList` (`scheduleID` INT, `theaterID` INT, `hallName` INT, `MovieID` INT, `Timing` INT, `Date` INT);

-- -----------------------------------------------------
-- Placeholder table for view `popcorndb`.`theaterMovieList`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `popcorndb`.`theaterMovieList` (`scheduleID` INT, `theaterName` INT, `MovieID` INT, `hallName` INT, `Timing` INT, `Date` INT);

-- -----------------------------------------------------
-- Placeholder table for view `popcorndb`.`theaterNamedList`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `popcorndb`.`theaterNamedList` (`scheduleID` INT, `movieName` INT, `theaterName` INT, `hallName` INT, `Timing` INT, `Date` INT);

-- -----------------------------------------------------
-- Placeholder table for view `popcorndb`.`scheduledSeats`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `popcorndb`.`scheduledSeats` (`HallClassId` INT, `ScheduleID` INT, `SeatID` INT);

-- -----------------------------------------------------
-- Placeholder table for view `popcorndb`.`theaterLocationList`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `popcorndb`.`theaterLocationList` (`theaterID` INT, `theaterName` INT, `LocationName` INT);

-- -----------------------------------------------------
-- View `popcorndb`.`movieList`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `popcorndb`.`movieList`;
DROP VIEW IF EXISTS `popcorndb`.`movieList` ;
USE `popcorndb`;
create  OR REPLACE view movieList as select * from schedule s JOIN hallTime ht using(halltimeID);

-- -----------------------------------------------------
-- View `popcorndb`.`hallMovieList`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `popcorndb`.`hallMovieList`;
DROP VIEW IF EXISTS `popcorndb`.`hallMovieList` ;
USE `popcorndb`;
create  OR REPLACE view hallMovieList as select scheduleID,halls.theaterID, halls.HallName hallName, MovieID, Timing, Date from movieList join halls using(hallID);

-- -----------------------------------------------------
-- View `popcorndb`.`theaterMovieList`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `popcorndb`.`theaterMovieList`;
DROP VIEW IF EXISTS `popcorndb`.`theaterMovieList` ;
USE `popcorndb`;
create  OR REPLACE view theaterMovieList as select  scheduleID, theater.Name theaterName, MovieID, hallName, Timing, Date from theater join hallMovieList using(theaterID);

-- -----------------------------------------------------
-- View `popcorndb`.`theaterNamedList`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `popcorndb`.`theaterNamedList`;
DROP VIEW IF EXISTS `popcorndb`.`theaterNamedList` ;
USE `popcorndb`;
create  OR REPLACE view theaterNamedList as select scheduleID, movies.name movieName, theaterName, hallName, Timing, Date from movies join theaterMovieList using(movieID);

-- -----------------------------------------------------
-- View `popcorndb`.`scheduledSeats`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `popcorndb`.`scheduledSeats`;
DROP VIEW IF EXISTS `popcorndb`.`scheduledSeats` ;
USE `popcorndb`;
create  OR REPLACE view scheduledSeats as select HallClassId, ScheduleID, SeatID from tickets join ticketrows using(ticketID);

-- -----------------------------------------------------
-- View `popcorndb`.`theaterLocationList`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `popcorndb`.`theaterLocationList`;
DROP VIEW IF EXISTS `popcorndb`.`theaterLocationList` ;
USE `popcorndb`;
CREATE  OR REPLACE VIEW theaterLocationList AS select theaterID, theater.name theaterName, Locations.Name LocationName from theater join locations using(LocationID);

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
